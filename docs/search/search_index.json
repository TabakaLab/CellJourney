{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Introduction Cell Journey is an open-source tool for interactive exploration and analysis of single-cell trajectories. It allows operating in three-dimensional space at the level of the entire dataset and individual cells. Each implemented visualization comes with several parameters, allowing versatile and quick customization. The resulting graphs can be saved as raster graphics, vector graphics, or interactive visualization in a standalone html file format. Features Analyze datasets in csv, h5, h5mu, h5ad formats. Visualize 3D scatter plots, cone plots, streamlines, and streamlets. Quick and straightforward configuration. Data filtering along with various plot customizations. Explore multiple features simultaneously. Automated differential gene expression analysis for calculated trajectories. Save publication-ready figures as well as interactive visualizations. Demo","title":"Introduction"},{"location":"index.html#introduction","text":"Cell Journey is an open-source tool for interactive exploration and analysis of single-cell trajectories. It allows operating in three-dimensional space at the level of the entire dataset and individual cells. Each implemented visualization comes with several parameters, allowing versatile and quick customization. The resulting graphs can be saved as raster graphics, vector graphics, or interactive visualization in a standalone html file format.","title":"Introduction"},{"location":"index.html#features","text":"Analyze datasets in csv, h5, h5mu, h5ad formats. Visualize 3D scatter plots, cone plots, streamlines, and streamlets. Quick and straightforward configuration. Data filtering along with various plot customizations. Explore multiple features simultaneously. Automated differential gene expression analysis for calculated trajectories. Save publication-ready figures as well as interactive visualizations.","title":"Features"},{"location":"index.html#demo","text":"","title":"Demo"},{"location":"install.html","text":"Installation In order to install Cell Journey, it is recommended to create a virtual environment in which all the required dependencies can be installed. The installation process consists of the following steps: Download Cell Journey. Create and activate a virtual environment. Install dependencies. Run the main script. 1. Download Cell Journey To download Cell Journey, execute the following command: git clone https://github.com/TabakaLab/CellJourney.git or go to https://github.com/TabakaLab/CellJourney , click on the <> Code button, and then select Download ZIP . After downloading and extracting the archive, navigate to the Cell Journey's main directory. 2. Create and activate virtual environment You can create a virtual environment using venv or conda . Using conda is recommended as it provides a more convenient way of configuring specific python version, in this case 3.11.7. Venv python -m venv cjenv source cjenv/bin/activate Conda conda create --name cjenv python=3.11.7 conda activate cjenv 3. Install dependencies Cell Journey is based on many libraries that are necessary for the toolkit to run correctly. These dependencies can be installed using the command pip install -r /path/to/celljourney/requirements.txt Please replace the example path /path/to/celljourney/ with one corresponding to your system's Cell Journey location. Remember to install the dependencies after activating the virtual environment. 4. Run the main script To run Cell Journey, you need to run the python script celljourney.py python /path/to/celljourney/celljourney.py Wait for the following information to show Dash is running on http://127.0.0.1:8080/ and then navigate to http://127.0.0.1:8080 . Cell Journey's default port is 8080. If, for some reason, the user would like to work on a different one, run the script with an additional port parameter, such as python celljourney.pl --port 8081 If the default or user-designated port is already occupied, the program will not run. If the user wants to run several Cell Journey sessions simultaneously, a different port should be designated for each session. To terminate the program, you must abort the celljourney.py script. This can be done in the shell where the script was run using the ctrl+z key combination.","title":"Installation"},{"location":"install.html#installation","text":"In order to install Cell Journey, it is recommended to create a virtual environment in which all the required dependencies can be installed. The installation process consists of the following steps: Download Cell Journey. Create and activate a virtual environment. Install dependencies. Run the main script.","title":"Installation"},{"location":"install.html#1-download-cell-journey","text":"To download Cell Journey, execute the following command: git clone https://github.com/TabakaLab/CellJourney.git or go to https://github.com/TabakaLab/CellJourney , click on the <> Code button, and then select Download ZIP . After downloading and extracting the archive, navigate to the Cell Journey's main directory.","title":"1. Download Cell Journey"},{"location":"install.html#2-create-and-activate-virtual-environment","text":"You can create a virtual environment using venv or conda . Using conda is recommended as it provides a more convenient way of configuring specific python version, in this case 3.11.7. Venv python -m venv cjenv source cjenv/bin/activate Conda conda create --name cjenv python=3.11.7 conda activate cjenv","title":"2. Create and activate virtual environment"},{"location":"install.html#3-install-dependencies","text":"Cell Journey is based on many libraries that are necessary for the toolkit to run correctly. These dependencies can be installed using the command pip install -r /path/to/celljourney/requirements.txt Please replace the example path /path/to/celljourney/ with one corresponding to your system's Cell Journey location. Remember to install the dependencies after activating the virtual environment.","title":"3. Install dependencies"},{"location":"install.html#4-run-the-main-script","text":"To run Cell Journey, you need to run the python script celljourney.py python /path/to/celljourney/celljourney.py Wait for the following information to show Dash is running on http://127.0.0.1:8080/ and then navigate to http://127.0.0.1:8080 . Cell Journey's default port is 8080. If, for some reason, the user would like to work on a different one, run the script with an additional port parameter, such as python celljourney.pl --port 8081 If the default or user-designated port is already occupied, the program will not run. If the user wants to run several Cell Journey sessions simultaneously, a different port should be designated for each session. To terminate the program, you must abort the celljourney.py script. This can be done in the shell where the script was run using the ctrl+z key combination.","title":"4. Run the main script"},{"location":"support.html","text":"Support If you would like to support the development of Cell Journey, please contact us directly or via GitHub Issues , where you can submit your suggestions and errors you encounter. If Cell Journey turned out to be useful in your work, you can also support us by quoting the article below. Citation @article{, title = {}, ISSN = {}, url = {}, DOI = {}, journal = {}, publisher = {}, author = {}, year = {} }","title":"Support"},{"location":"support.html#support","text":"If you would like to support the development of Cell Journey, please contact us directly or via GitHub Issues , where you can submit your suggestions and errors you encounter. If Cell Journey turned out to be useful in your work, you can also support us by quoting the article below.","title":"Support"},{"location":"support.html#citation","text":"@article{, title = {}, ISSN = {}, url = {}, DOI = {}, journal = {}, publisher = {}, author = {}, year = {} }","title":"Citation"},{"location":"tutorials.html","text":"Tutorials Generating 3D Data To generate the dataset, we will use the built-in pancreas dataset from scvelo . The process of obtaining the velocity vector components is detailed in the scvelo tutorials. We will focus on one key difference that enables generating three-dimensional data. adata = scv.datasets.pancreas() adata AnnData object with n_obs \u00d7 n_vars = 3696 \u00d7 27998 obs: 'clusters_coarse', 'clusters', 'S_score', 'G2M_score' var: 'highly_variable_genes' uns: 'clusters_coarse_colors', 'clusters_colors', 'day_colors', 'neighbors', 'pca' obsm: 'X_pca', 'X_umap' layers: 'spliced', 'unspliced' obsp: 'distances', 'connectivities' The dataset already contains a UMAP embedding, but it is two-dimensional. adata.obsm[\"X_umap\"].shape (3696, 2) Using scanpy.tl.umap , we will create a three-dimensional UMAP embedding instead. This will allow us to represent the cells in 3D space and the velocity vectors will be determined according to the dimensionality of the specified embedding. sc.tl.umap(adata, n_components = 3) adata.obsm[\"X_umap\"].shape (3696, 3) scv.pp.filter_genes(adata, min_shared_counts=20) scv.pp.normalize_per_cell(adata) scv.pp.filter_genes_dispersion(adata, n_top_genes=2000) scv.pp.log1p(adata) adata AnnData object with n_obs \u00d7 n_vars = 3696 \u00d7 2000 obs: 'clusters_coarse', 'clusters', 'S_score', 'G2M_score', 'initial_size_unspliced', 'initial_size_spliced', 'initial_size', 'n_counts' var: 'highly_variable_genes', 'gene_count_corr', 'means', 'dispersions', 'dispersions_norm', 'highly_variable' uns: 'clusters_coarse_colors', 'clusters_colors', 'day_colors', 'neighbors', 'pca', 'umap', 'log1p' obsm: 'X_pca', 'X_umap' layers: 'spliced', 'unspliced' obsp: 'distances', 'connectivities' scv.tl.velocity_graph(adata) scv.tl.velocity(adata) scv.tl.velocity_embedding(adata, basis='umap') adata AnnData object with n_obs \u00d7 n_vars = 3696 \u00d7 2000 obs: 'clusters_coarse', 'clusters', 'S_score', 'G2M_score', 'initial_size_unspliced', 'initial_size_spliced', 'initial_size', 'n_counts', 'velocity_self_transition' var: 'highly_variable_genes', 'gene_count_corr', 'means', 'dispersions', 'dispersions_norm', 'highly_variable', 'velocity_gamma', 'velocity_qreg_ratio', 'velocity_r2', 'velocity_genes' uns: 'clusters_coarse_colors', 'clusters_colors', 'day_colors', 'neighbors', 'pca', 'umap', 'log1p', 'velocity_params', 'velocity_graph', 'velocity_graph_neg' obsm: 'X_pca', 'X_umap', 'velocity_umap' layers: 'spliced', 'unspliced', 'Ms', 'Mu', 'velocity', 'variance_velocity' obsp: 'distances', 'connectivities' The velocity vectors have been successfully determined and are located in obsm as velocity_umap . Dash, which is used to create Cell Journey, has its limitations. Loading very large files can be automatically interrupted. Therefore, files for the Cell Journey analysis should be stripped of unnecessary data, especially large dense matrices. For the pancreas dataset it is sufficient to limit the data to what is contained in var , obs , obsm , and the sparse X matrix. adata_slim = sc.AnnData(X=adata.X, obs=adata.obs, var=adata.var, obsm=adata.obsm) adata_slim.write(\"pancreas_slim.h5ad) For comparison, we can also save the entire adata dataset. adata.write(\"pancreas_full.h5ad\") full_dataset = os.stat(\"pancreas_full.h5ad\") full_dataset_size = full_dataset.st_size / (1024 ** 2) slim_dataset = os.stat(\"pancreas_slim.h5ad\") slim_dataset_size = slim_dataset.st_size / (1024 ** 2) print(f\"Full dataset: {full_dataset_size:.2f} MB, slim dataset: {slim_dataset_size:.2f} MB\") Full dataset: 1756.84 MB, slim dataset: 14.64 MB","title":"Tutorials"},{"location":"tutorials.html#tutorials","text":"","title":"Tutorials"},{"location":"tutorials.html#generating-3d-data","text":"To generate the dataset, we will use the built-in pancreas dataset from scvelo . The process of obtaining the velocity vector components is detailed in the scvelo tutorials. We will focus on one key difference that enables generating three-dimensional data. adata = scv.datasets.pancreas() adata AnnData object with n_obs \u00d7 n_vars = 3696 \u00d7 27998 obs: 'clusters_coarse', 'clusters', 'S_score', 'G2M_score' var: 'highly_variable_genes' uns: 'clusters_coarse_colors', 'clusters_colors', 'day_colors', 'neighbors', 'pca' obsm: 'X_pca', 'X_umap' layers: 'spliced', 'unspliced' obsp: 'distances', 'connectivities' The dataset already contains a UMAP embedding, but it is two-dimensional. adata.obsm[\"X_umap\"].shape (3696, 2) Using scanpy.tl.umap , we will create a three-dimensional UMAP embedding instead. This will allow us to represent the cells in 3D space and the velocity vectors will be determined according to the dimensionality of the specified embedding. sc.tl.umap(adata, n_components = 3) adata.obsm[\"X_umap\"].shape (3696, 3) scv.pp.filter_genes(adata, min_shared_counts=20) scv.pp.normalize_per_cell(adata) scv.pp.filter_genes_dispersion(adata, n_top_genes=2000) scv.pp.log1p(adata) adata AnnData object with n_obs \u00d7 n_vars = 3696 \u00d7 2000 obs: 'clusters_coarse', 'clusters', 'S_score', 'G2M_score', 'initial_size_unspliced', 'initial_size_spliced', 'initial_size', 'n_counts' var: 'highly_variable_genes', 'gene_count_corr', 'means', 'dispersions', 'dispersions_norm', 'highly_variable' uns: 'clusters_coarse_colors', 'clusters_colors', 'day_colors', 'neighbors', 'pca', 'umap', 'log1p' obsm: 'X_pca', 'X_umap' layers: 'spliced', 'unspliced' obsp: 'distances', 'connectivities' scv.tl.velocity_graph(adata) scv.tl.velocity(adata) scv.tl.velocity_embedding(adata, basis='umap') adata AnnData object with n_obs \u00d7 n_vars = 3696 \u00d7 2000 obs: 'clusters_coarse', 'clusters', 'S_score', 'G2M_score', 'initial_size_unspliced', 'initial_size_spliced', 'initial_size', 'n_counts', 'velocity_self_transition' var: 'highly_variable_genes', 'gene_count_corr', 'means', 'dispersions', 'dispersions_norm', 'highly_variable', 'velocity_gamma', 'velocity_qreg_ratio', 'velocity_r2', 'velocity_genes' uns: 'clusters_coarse_colors', 'clusters_colors', 'day_colors', 'neighbors', 'pca', 'umap', 'log1p', 'velocity_params', 'velocity_graph', 'velocity_graph_neg' obsm: 'X_pca', 'X_umap', 'velocity_umap' layers: 'spliced', 'unspliced', 'Ms', 'Mu', 'velocity', 'variance_velocity' obsp: 'distances', 'connectivities' The velocity vectors have been successfully determined and are located in obsm as velocity_umap . Dash, which is used to create Cell Journey, has its limitations. Loading very large files can be automatically interrupted. Therefore, files for the Cell Journey analysis should be stripped of unnecessary data, especially large dense matrices. For the pancreas dataset it is sufficient to limit the data to what is contained in var , obs , obsm , and the sparse X matrix. adata_slim = sc.AnnData(X=adata.X, obs=adata.obs, var=adata.var, obsm=adata.obsm) adata_slim.write(\"pancreas_slim.h5ad) For comparison, we can also save the entire adata dataset. adata.write(\"pancreas_full.h5ad\") full_dataset = os.stat(\"pancreas_full.h5ad\") full_dataset_size = full_dataset.st_size / (1024 ** 2) slim_dataset = os.stat(\"pancreas_slim.h5ad\") slim_dataset_size = slim_dataset.st_size / (1024 ** 2) print(f\"Full dataset: {full_dataset_size:.2f} MB, slim dataset: {slim_dataset_size:.2f} MB\") Full dataset: 1756.84 MB, slim dataset: 14.64 MB","title":"Generating 3D Data"},{"location":"usage.html","text":"Usage Upload data and select features To upload a dataset, use the Drag and drop or select a file to upload button and then click on Upload data . After the data is uploaded correctly, a confirmation message will appear. If the uploaded data is not normalized, an additional window will appear that will allow you to do so. Next, select the appropriate features with cell coordinates and the corresponding velocity vector components. Click on the Submit selected features button to confirm your selection. The Scatter Plot and Cone Plot sections will update automatically. Global plot configuration This section allows global customization of the Cell Journey visualizations. Show features on hover - information about the cell to be displayed when the cursor hovers over it. This is an experimental functionality and may e.g. noticeably slow down the program, mainly when applied to many features. Template - general theme of the chart. The default value is simple_white . In addition, the appearance can be modified through the Legend switch (value Show (default) or Hide) and the Axes switch, which allows you to turn off all axes (value Show (default) or Hide). Available templates: ggplot2, seaborn, simple_white, plotly, plotly_white, plotly_dark, presentation . Legend orientation - the direction in which the legend should display the elements (Vertical (default) or horizontal). Legend: horizontal/vertical position - a value between 0 and 1 that controls the legend's position. For horizontal position 0 indicates left, and 1 right. For horizontal 1 indicates top, and 0 bottom. If the user does not want the legend displayed, change the switch Legend value to Hide (the default value is Show). Also, for scatterplots combined with trajectories, it is possible to exclude streamlines or streamlets from the legend (switch Streamlines/streamlets in legend ). Scatter plot Important note. The 3D scatter plot customization is applied not only to the Scatter plot section, but also to Plot trajectories and Cell Journey . Select feature - a variable used for coloring the plot. Its selection automatically changes the value of the button below from Single color to Feature-base colors . To return to a single color, select Single color . A single color can be selected using the color picker located at the bottom. Modality - the field is visible only when multimodal data (h5mu file) is loaded. After selecting the modality, an additional field appears directly below, allowing, for example, the selection of a gene when RNA modality is chosen. The plot will be colored based on the selected feature. Point size - the size of the displayed points. The minimum effective value for this parameter is 0.1. No upper limit. Opacity - the level of points transparency, the lowest value is 0 (full transparency/no visibility), the maximum value is 1 (no transparency/full visibility). Built-in continuous color scale - The color palette used when a continuous variable is selected. The color order can be reversed using switch Continuous color scale in reversed direction (default value is OFF). Available palettes: Balance, Blackbody, Blues, Bluered, Electric, Greens, Greys, Hot, Inferno, Jet, Magma, Plasma, Plotly3, Rainbow, Reds, Solar, Temps, Turbo, Twilight, Viridis . Built-in discrete color scale - The color palette used when a discrete variable is selected. Available palettes: Crayola, Crayola_Mix, Crayola_Fluorescent, Crayola_Magic_Scent, Crayola_Changeables, Crayola_Pearl_Brite, Crayola_Glitter, Crayola_Metallic_FX, Crayola_Gel_FX, Crayola_Silly_Scents, Crayola_Heads_n_Tails, Crayola_Mini_Twistables . Space-separated list of hex values (max 20 colors). - a text field where custom colors can be specified. The user can define their own color palette for both continuous and discrete data. To do this, switch the Use my custom color scale to ON and define the colors in the Space-separated list of hex values field. It is possible to select colors using the color picker at the bottom by enabling the Create custom palette from the color picker switch. When set to ON, colors chosen by mouse click will be added automatically. Below the color picker, there is also a palette of colors defined in the built-in discrete color scale field. If the continuous data scale has an unusual character, such as being highly nonlinear, the user can adjust the gradient transitions using the slider located directly above the Create custom palette from the color picker switch. By default, this slider is inactive and becomes active only when at least two custom colors are present. When a continuous feature is selected, a histogram of that feature's values appears below the slider, with added dashed lines indicating the transition points between colors. Cone plot Cone size - a relative sizes of the displayed cones. Opacity - a level of cones transparency, the lowest value is 0 (full transparency/no visibility), the maximum value is 1 (no transparency/full visibility) Color scale - a selector with a list of built-in palettes for continuous data. Cones are colored based on the lengths of the velocity vectors. Available palettes: Balance, Blackbody, Blues, Bluered, Electric, Greens, Greys, Hot, Inferno, Jet, Magma, Plasma, Plotly3, Rainbow, Reds, Solar, Temps, Turbo, Twilight, Viridis Trajectories The Trajectories section is designed to determine the global characteristic of cell differentiation. By default, trajectories are calculated for each grid point where the value of the averaged vector field is non-zero. Once the trajectories are generated, the user can adjust their appearance in real-time. Grid size - the number of splits into which the interval from the minimum to the maximum value for each axis is divided. The averaged value of the vector field is subsequently determined for each grid point. Integration method - algorithm used to determine the position of the cell for the next step. Euler's method (default) is faster but less accurate than 4th Order Runge-Kutta . Number of steps - the maximum number of steps taken to determine the trajectory. This is the fundamental parameter that allows controlling the length of the trajectory. Note that the final number of steps can be lower if one of two conditions is met: The point is outside the point cloud. The criterion for determining whether a point should be considered to be outside the point cloud can be controlled using Grid size and Scale grid . The progress of the trajectory is not large enough (the trajectory moves too slowly). This criterion can be controlled with the Difference threshold parameter. Step size - a parameter that scales the size of the step. A larger size step translates into longer and less accurate trajectories. The parameter affects not only length of the trajectories but also their total number. Difference threshold - the minimum distance between the last two points of the trajectory. If this threshold is not exceeded, the integration is aborted. This parameter is intended to speed up the calculation process. It can be disabled by setting its the value to 0. Scale grid - changes the grid size, which is considered when checking the cells' presence. A value greater than 1 extends the grid and, therefore, increases the probability of generating a longer trajectory but also runs the risk of trajectories going outside the point cloud. A value less than 1 allows better control of trajectories in terms of not leaving the point cloud but will result in fewer and shorter trajectories. After selecting the preferred values, click the Generate trajectories (streamlines and streamlets) button. The process of determining the trajectories heavily depends on selected parameters, and it can take from a few seconds to several minutes. The calculation progress can be monitored in the terminal. An example of the final result might look like this: Generating trajectories for n_grid=30, n_steps=400, step_size=1, diff=0.002 1/2 Averaging vector space consisting of 27000 grid cells [========================================================================] 100% 2/2 Calculating trajectories for 1196 starting points [========================================================================] 100% Finished! Generated 861 trajectories in total. Trajectories can be depicted as streamlines or streamlets. To choose preferable method click on Show streamlines (default value) or Show streamlets . Streamlets length - the length of fragments into which trajectories (streamlines) are to be divided. Too large a value relative to the Number of steps may result in generating an insufficient number of streamlets. This parameter can be updated separately, after generating the averaged vector field and trajectories, by clicking on the Update streamlets button. Once the calculation is complete, the figure in the Plot trajectories tab will be automatically updated. In addition, a histogram with the length (number of steps) of the trajectories (streamlines or streamlets) and a red slider will appear. This allows to filter out trajectories of unwanted length, such as those that are too short. By default, trajectories are combined with a scatter plot. To turn this feature off switch Combine trajectories with scatter plot to OFF. Subset current number of trajectories - the proportion of displayed trajectories. If the user wants to reduce their number, they should decrease the default value of 1 to a smaller value and then confirm by clicking on Confirm . To restore all trajectories, click on the Restore all button. Note: It is recommended to use this function before filtering trajectories using the red slider under the histogram. Line width - the thickness of the trajectory. This parameter also affects the appearance of the single trajectory in the Cell Journey section. Opacity - the level of transparency of the trajectory (0 - full transparency, 1 - trajectories opaque). This parameter also affects the appearance of the single trajectory in the Cell Journey section. Color scale - the palette of colors used to draw trajectories. If user prefers to reverse order of selected color scale, i.e. color representing beginning of the trajecotry should represent its end, a dedicated switch labeled Color scale in reversed direction must be triggered (the default value is OFF). Available options: Balance, Blackbody, Blues, Bluered, Electric, Greens, Greys, Hot, Inferno, Jet, Magma, Plasma, Plotly3, Rainbow, Reds, Solar, Temps, Turbo, Twilight, Viridis . This parameter also affects the appearance of the single trajectory in the Cell Journey section. Cell Journey In the Cell Journey section user can simulate and analyze trajectories of selected cell simply by clicking on them. Here a second vector field is generated. This seemingly redundant feature allows user to generate a denser grid than in the case of the Plot trajectories , where hundreds of trajectories need to be integrated. The simulation results can be more precise while avoiding the most time consuming calculations. In the case of determining multiple trajectories for a very dense grid, the generation of results can take a long time, and the exploration of the results itself does not work smoothly enough. In this case, this problem will not occur due to the drawing of only one trajectory. Moreover, a user interested solely in analyzing individual trajectories can skip the Plot trajectories section and avoid generating the global characterization of cell trajectories altogether. Be careful when manipulating plot view, as any accidental click on a cell may overwrite current result with a new trajectory. This feature can be disabled by switching Lock trajectory to ON. Select trajectory - this field is active only if the user has generated trajectories in the Plot trajectories section. It is recommended to use the same grid size in the Cell Journey section as in Plot Trajectories when using one of the trajectories. Grid size - the number of splits into which the interval from the minimum to the maximum value for each axis is divided. The averaged value of the vector field is subsequently determined for each grid point. This is the only parameter that needs to be specified before clicking on Generate grid. The progress of grid calculation can be monitored in the terminal. An example result: Averaging vector space consisting of 8000 grid cells [========================================================================] 100% Finished! When the second grid is generated, a scatter plot with the same visual parameters as used in the Scatter plot will appear. To select a cell, click on it. The appearance of the generated trajectory (line thickness, transparency, color scale) can be controlled using the parameters of the Plot trajectories section. The points in the Scatter plot section can be adjusted in the same way. Integration method - algorithm used to determine the position of the cell for the next step. Euler's method (default) is faster but less accurate than 4th Order Runge-Kutta . Starting velocity - The initial velocity value for integrating the trajectory. For highly noisy data, Cells exact velocity may not provide as robust results as Interpolated or Highest velocity (within the grid) options. Number of steps - the maximum number of steps taken to determine the trajectory. This is the fundamental parameter that allows controlling the length of the trajectory. Note that the final number of steps can be shorter if one of two conditions is met: The point is outside the point cloud. The criterion for determining whether a point should be considered to be outside the point cloud can be controlled using Grid size and Scale grid . The progress of the trajectory is not large enough (the trajectory moves too slowly). This criterion can be controlled with the Difference threshold parameter. Step size - a parameter that scales the size of the step. A larger size step translates into longer and less accurate trajectories. The parameter affects not only length of the trajectories but also their total number. Difference threshold - the minimum distance between the last two points of the trajectory. If this threshold is not exceeded, the integration is aborted. This parameter is intended to speed up the calculation process. It can be disabled by setting its the value to 0. Scale grid - changes the grid size, which is considered when checking the cells' presence. A value greater than 1 extends the grid and, therefore, increases the probability of generating a longer trajectory but also runs the risk of trajectories going outside the point cloud. A value less than 1 allows better control of trajectories in terms of not leaving the point cloud but will result in fewer and shorter trajectories. Heatmap method - the method of displaying the average expression on the heatmap. Absolute shows the mean value, while Relative to first segment shows the value subtracted from the mean expression of the first segment of the trajectory. Note: This feature is not available when loading CSV data. Number of clusters - the number of clusters for the k-means algorithm to divide the data on the heatmap. Number of features - the number of features (genes) displayed on the heatmap. Tube radius - the radius of the cylinder tube whose center is defined by the trajectory. Tube segment - the number of segments the trajectory is divided into. Tube cells size - the size of the displayed cells that are within a distance no greater than the Tube radius from the trajectory. These cells can also be colored by selecting a preferred value from the color picker. To avoid highlighting cells belonging to the tube, change Highlight tube cells switch to OFF (default value is ON). Heatmap color scale - the color scale used for visualizing the heatmap. Available options: Balance, Blackbody, Blues, Bluered, Electric, Greens, Greys, Hot, Inferno, Jet, Magma, Plasma, Plotly3, Rainbow, Reds, Solar, Temps, Turbo, Twilight, Viridis . Export results Select figure - the plot to be saved. Available options: Scatter plot, Cone plot, Trajectories (streamlines/streamlets), Single trajectory (Cell Journey), Heatmap (Cell Journey) . Filename - the file name with or without the extension. Please name your files carefully as they will overwrite files existing in the saved_plots directory. Format - the format in which the visualization will be saved. Available formats: png, jpg, webp, svg, pdf, html . Width/height - the width and height of the graphic. These values can be altered when the scale figure parameter is not equal to 1. Scale figure (size multipler) - a multiplier that allows you to enlarge (or reduce) the size of the plot without changing the values in the width and height fields. Select table - the data to be saved. Available options: Heatmap expression (with feature names and clusters), Trajectory cells (with segment).","title":"Usage"},{"location":"usage.html#usage","text":"","title":"Usage"},{"location":"usage.html#upload-data-and-select-features","text":"To upload a dataset, use the Drag and drop or select a file to upload button and then click on Upload data . After the data is uploaded correctly, a confirmation message will appear. If the uploaded data is not normalized, an additional window will appear that will allow you to do so. Next, select the appropriate features with cell coordinates and the corresponding velocity vector components. Click on the Submit selected features button to confirm your selection. The Scatter Plot and Cone Plot sections will update automatically.","title":"Upload data and select features"},{"location":"usage.html#global-plot-configuration","text":"This section allows global customization of the Cell Journey visualizations. Show features on hover - information about the cell to be displayed when the cursor hovers over it. This is an experimental functionality and may e.g. noticeably slow down the program, mainly when applied to many features. Template - general theme of the chart. The default value is simple_white . In addition, the appearance can be modified through the Legend switch (value Show (default) or Hide) and the Axes switch, which allows you to turn off all axes (value Show (default) or Hide). Available templates: ggplot2, seaborn, simple_white, plotly, plotly_white, plotly_dark, presentation . Legend orientation - the direction in which the legend should display the elements (Vertical (default) or horizontal). Legend: horizontal/vertical position - a value between 0 and 1 that controls the legend's position. For horizontal position 0 indicates left, and 1 right. For horizontal 1 indicates top, and 0 bottom. If the user does not want the legend displayed, change the switch Legend value to Hide (the default value is Show). Also, for scatterplots combined with trajectories, it is possible to exclude streamlines or streamlets from the legend (switch Streamlines/streamlets in legend ).","title":"Global plot configuration"},{"location":"usage.html#scatter-plot","text":"Important note. The 3D scatter plot customization is applied not only to the Scatter plot section, but also to Plot trajectories and Cell Journey . Select feature - a variable used for coloring the plot. Its selection automatically changes the value of the button below from Single color to Feature-base colors . To return to a single color, select Single color . A single color can be selected using the color picker located at the bottom. Modality - the field is visible only when multimodal data (h5mu file) is loaded. After selecting the modality, an additional field appears directly below, allowing, for example, the selection of a gene when RNA modality is chosen. The plot will be colored based on the selected feature. Point size - the size of the displayed points. The minimum effective value for this parameter is 0.1. No upper limit. Opacity - the level of points transparency, the lowest value is 0 (full transparency/no visibility), the maximum value is 1 (no transparency/full visibility). Built-in continuous color scale - The color palette used when a continuous variable is selected. The color order can be reversed using switch Continuous color scale in reversed direction (default value is OFF). Available palettes: Balance, Blackbody, Blues, Bluered, Electric, Greens, Greys, Hot, Inferno, Jet, Magma, Plasma, Plotly3, Rainbow, Reds, Solar, Temps, Turbo, Twilight, Viridis . Built-in discrete color scale - The color palette used when a discrete variable is selected. Available palettes: Crayola, Crayola_Mix, Crayola_Fluorescent, Crayola_Magic_Scent, Crayola_Changeables, Crayola_Pearl_Brite, Crayola_Glitter, Crayola_Metallic_FX, Crayola_Gel_FX, Crayola_Silly_Scents, Crayola_Heads_n_Tails, Crayola_Mini_Twistables . Space-separated list of hex values (max 20 colors). - a text field where custom colors can be specified. The user can define their own color palette for both continuous and discrete data. To do this, switch the Use my custom color scale to ON and define the colors in the Space-separated list of hex values field. It is possible to select colors using the color picker at the bottom by enabling the Create custom palette from the color picker switch. When set to ON, colors chosen by mouse click will be added automatically. Below the color picker, there is also a palette of colors defined in the built-in discrete color scale field. If the continuous data scale has an unusual character, such as being highly nonlinear, the user can adjust the gradient transitions using the slider located directly above the Create custom palette from the color picker switch. By default, this slider is inactive and becomes active only when at least two custom colors are present. When a continuous feature is selected, a histogram of that feature's values appears below the slider, with added dashed lines indicating the transition points between colors.","title":"Scatter plot"},{"location":"usage.html#cone-plot","text":"Cone size - a relative sizes of the displayed cones. Opacity - a level of cones transparency, the lowest value is 0 (full transparency/no visibility), the maximum value is 1 (no transparency/full visibility) Color scale - a selector with a list of built-in palettes for continuous data. Cones are colored based on the lengths of the velocity vectors. Available palettes: Balance, Blackbody, Blues, Bluered, Electric, Greens, Greys, Hot, Inferno, Jet, Magma, Plasma, Plotly3, Rainbow, Reds, Solar, Temps, Turbo, Twilight, Viridis","title":"Cone plot"},{"location":"usage.html#trajectories","text":"The Trajectories section is designed to determine the global characteristic of cell differentiation. By default, trajectories are calculated for each grid point where the value of the averaged vector field is non-zero. Once the trajectories are generated, the user can adjust their appearance in real-time. Grid size - the number of splits into which the interval from the minimum to the maximum value for each axis is divided. The averaged value of the vector field is subsequently determined for each grid point. Integration method - algorithm used to determine the position of the cell for the next step. Euler's method (default) is faster but less accurate than 4th Order Runge-Kutta . Number of steps - the maximum number of steps taken to determine the trajectory. This is the fundamental parameter that allows controlling the length of the trajectory. Note that the final number of steps can be lower if one of two conditions is met: The point is outside the point cloud. The criterion for determining whether a point should be considered to be outside the point cloud can be controlled using Grid size and Scale grid . The progress of the trajectory is not large enough (the trajectory moves too slowly). This criterion can be controlled with the Difference threshold parameter. Step size - a parameter that scales the size of the step. A larger size step translates into longer and less accurate trajectories. The parameter affects not only length of the trajectories but also their total number. Difference threshold - the minimum distance between the last two points of the trajectory. If this threshold is not exceeded, the integration is aborted. This parameter is intended to speed up the calculation process. It can be disabled by setting its the value to 0. Scale grid - changes the grid size, which is considered when checking the cells' presence. A value greater than 1 extends the grid and, therefore, increases the probability of generating a longer trajectory but also runs the risk of trajectories going outside the point cloud. A value less than 1 allows better control of trajectories in terms of not leaving the point cloud but will result in fewer and shorter trajectories. After selecting the preferred values, click the Generate trajectories (streamlines and streamlets) button. The process of determining the trajectories heavily depends on selected parameters, and it can take from a few seconds to several minutes. The calculation progress can be monitored in the terminal. An example of the final result might look like this: Generating trajectories for n_grid=30, n_steps=400, step_size=1, diff=0.002 1/2 Averaging vector space consisting of 27000 grid cells [========================================================================] 100% 2/2 Calculating trajectories for 1196 starting points [========================================================================] 100% Finished! Generated 861 trajectories in total. Trajectories can be depicted as streamlines or streamlets. To choose preferable method click on Show streamlines (default value) or Show streamlets . Streamlets length - the length of fragments into which trajectories (streamlines) are to be divided. Too large a value relative to the Number of steps may result in generating an insufficient number of streamlets. This parameter can be updated separately, after generating the averaged vector field and trajectories, by clicking on the Update streamlets button. Once the calculation is complete, the figure in the Plot trajectories tab will be automatically updated. In addition, a histogram with the length (number of steps) of the trajectories (streamlines or streamlets) and a red slider will appear. This allows to filter out trajectories of unwanted length, such as those that are too short. By default, trajectories are combined with a scatter plot. To turn this feature off switch Combine trajectories with scatter plot to OFF. Subset current number of trajectories - the proportion of displayed trajectories. If the user wants to reduce their number, they should decrease the default value of 1 to a smaller value and then confirm by clicking on Confirm . To restore all trajectories, click on the Restore all button. Note: It is recommended to use this function before filtering trajectories using the red slider under the histogram. Line width - the thickness of the trajectory. This parameter also affects the appearance of the single trajectory in the Cell Journey section. Opacity - the level of transparency of the trajectory (0 - full transparency, 1 - trajectories opaque). This parameter also affects the appearance of the single trajectory in the Cell Journey section. Color scale - the palette of colors used to draw trajectories. If user prefers to reverse order of selected color scale, i.e. color representing beginning of the trajecotry should represent its end, a dedicated switch labeled Color scale in reversed direction must be triggered (the default value is OFF). Available options: Balance, Blackbody, Blues, Bluered, Electric, Greens, Greys, Hot, Inferno, Jet, Magma, Plasma, Plotly3, Rainbow, Reds, Solar, Temps, Turbo, Twilight, Viridis . This parameter also affects the appearance of the single trajectory in the Cell Journey section.","title":"Trajectories"},{"location":"usage.html#cell-journey","text":"In the Cell Journey section user can simulate and analyze trajectories of selected cell simply by clicking on them. Here a second vector field is generated. This seemingly redundant feature allows user to generate a denser grid than in the case of the Plot trajectories , where hundreds of trajectories need to be integrated. The simulation results can be more precise while avoiding the most time consuming calculations. In the case of determining multiple trajectories for a very dense grid, the generation of results can take a long time, and the exploration of the results itself does not work smoothly enough. In this case, this problem will not occur due to the drawing of only one trajectory. Moreover, a user interested solely in analyzing individual trajectories can skip the Plot trajectories section and avoid generating the global characterization of cell trajectories altogether. Be careful when manipulating plot view, as any accidental click on a cell may overwrite current result with a new trajectory. This feature can be disabled by switching Lock trajectory to ON. Select trajectory - this field is active only if the user has generated trajectories in the Plot trajectories section. It is recommended to use the same grid size in the Cell Journey section as in Plot Trajectories when using one of the trajectories. Grid size - the number of splits into which the interval from the minimum to the maximum value for each axis is divided. The averaged value of the vector field is subsequently determined for each grid point. This is the only parameter that needs to be specified before clicking on Generate grid. The progress of grid calculation can be monitored in the terminal. An example result: Averaging vector space consisting of 8000 grid cells [========================================================================] 100% Finished! When the second grid is generated, a scatter plot with the same visual parameters as used in the Scatter plot will appear. To select a cell, click on it. The appearance of the generated trajectory (line thickness, transparency, color scale) can be controlled using the parameters of the Plot trajectories section. The points in the Scatter plot section can be adjusted in the same way. Integration method - algorithm used to determine the position of the cell for the next step. Euler's method (default) is faster but less accurate than 4th Order Runge-Kutta . Starting velocity - The initial velocity value for integrating the trajectory. For highly noisy data, Cells exact velocity may not provide as robust results as Interpolated or Highest velocity (within the grid) options. Number of steps - the maximum number of steps taken to determine the trajectory. This is the fundamental parameter that allows controlling the length of the trajectory. Note that the final number of steps can be shorter if one of two conditions is met: The point is outside the point cloud. The criterion for determining whether a point should be considered to be outside the point cloud can be controlled using Grid size and Scale grid . The progress of the trajectory is not large enough (the trajectory moves too slowly). This criterion can be controlled with the Difference threshold parameter. Step size - a parameter that scales the size of the step. A larger size step translates into longer and less accurate trajectories. The parameter affects not only length of the trajectories but also their total number. Difference threshold - the minimum distance between the last two points of the trajectory. If this threshold is not exceeded, the integration is aborted. This parameter is intended to speed up the calculation process. It can be disabled by setting its the value to 0. Scale grid - changes the grid size, which is considered when checking the cells' presence. A value greater than 1 extends the grid and, therefore, increases the probability of generating a longer trajectory but also runs the risk of trajectories going outside the point cloud. A value less than 1 allows better control of trajectories in terms of not leaving the point cloud but will result in fewer and shorter trajectories. Heatmap method - the method of displaying the average expression on the heatmap. Absolute shows the mean value, while Relative to first segment shows the value subtracted from the mean expression of the first segment of the trajectory. Note: This feature is not available when loading CSV data. Number of clusters - the number of clusters for the k-means algorithm to divide the data on the heatmap. Number of features - the number of features (genes) displayed on the heatmap. Tube radius - the radius of the cylinder tube whose center is defined by the trajectory. Tube segment - the number of segments the trajectory is divided into. Tube cells size - the size of the displayed cells that are within a distance no greater than the Tube radius from the trajectory. These cells can also be colored by selecting a preferred value from the color picker. To avoid highlighting cells belonging to the tube, change Highlight tube cells switch to OFF (default value is ON). Heatmap color scale - the color scale used for visualizing the heatmap. Available options: Balance, Blackbody, Blues, Bluered, Electric, Greens, Greys, Hot, Inferno, Jet, Magma, Plasma, Plotly3, Rainbow, Reds, Solar, Temps, Turbo, Twilight, Viridis .","title":"Cell Journey"},{"location":"usage.html#export-results","text":"Select figure - the plot to be saved. Available options: Scatter plot, Cone plot, Trajectories (streamlines/streamlets), Single trajectory (Cell Journey), Heatmap (Cell Journey) . Filename - the file name with or without the extension. Please name your files carefully as they will overwrite files existing in the saved_plots directory. Format - the format in which the visualization will be saved. Available formats: png, jpg, webp, svg, pdf, html . Width/height - the width and height of the graphic. These values can be altered when the scale figure parameter is not equal to 1. Scale figure (size multipler) - a multiplier that allows you to enlarge (or reduce) the size of the plot without changing the values in the width and height fields. Select table - the data to be saved. Available options: Heatmap expression (with feature names and clusters), Trajectory cells (with segment).","title":"Export results"}]}